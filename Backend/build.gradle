plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.google.cloud.tools.jib' version '3.3.1' // Jib 플러그인 추가
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:3.3.4"
	}
}

group = 'com.pathsnap'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone/' }  // Spring 리포지토리 추가
}

dependencies{

	// JSON Web Token
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3' //jwt 추가
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security' // Security 추가
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'com.mysql:mysql-connector-j'  // mysql 접속 도와주는 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  //orm 라이브러리
	compileOnly 'org.projectlombok:lombok' // 룸북
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'//s3

	// SpringDoc OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-websocket' // 웹소켓

}

tasks.named('test') {
	useJUnitPlatform()
}
